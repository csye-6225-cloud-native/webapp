name: Packer Build - GCE Image

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: 'Packer Build'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_EMAIL_VERIFICATION_PUBSUB_TOPIC: ${{ secrets.GCP_EMAIL_VERIFICATION_PUBSUB_TOPIC }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install and Configure gcloud CLI
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install PostgresSQL
        run: |
          sudo apt update
          sudo apt install -y postgresql postgresql-contrib
          sudo systemctl start postgresql
          
          # Configure PostgresSQL
          sudo -u postgres psql -c "CREATE DATABASE cloud_db;"
          sudo -u postgres psql -c "CREATE USER ${{ secrets.DB_USERNAME }} WITH PASSWORD '${{ secrets.DB_PASSWORD }}';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE cloud_db TO ${{ secrets.DB_USERNAME }};"

      - name: Create PubSub Topic
        run: gcloud pubsub topics create test_verify_email

      - name: Build Artifact
        run: mvn clean package -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Cleanup PubSub Topic
        if: always()
        run: gcloud pubsub topics delete test_verify_email

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: 'latest'

      - name: Packer Configuration
        run: |
          touch gcp.pkrvars.hcl
          echo environment=\"${{ vars.ENVIRONMENT }}\" >> gcp.pkrvars.hcl
          echo project_id=\"${{ secrets.GCP_PROJECT_ID }}\" >> gcp.pkrvars.hcl
          echo zone=\"${{ secrets.GCP_ZONE }}\" >> gcp.pkrvars.hcl
          echo ssh_username=\"${{ secrets.SSH_USERNAME }}\" >> gcp.pkrvars.hcl
          echo db_username=\"${{ secrets.DB_USERNAME }}\" >> gcp.pkrvars.hcl
          echo db_password=\"${{ secrets.DB_PASSWORD }}\" >> gcp.pkrvars.hcl
          echo source_image_family=\"${{ secrets.SOURCE_IMAGE_FAMILY }}\" >> gcp.pkrvars.hcl
          echo subnet_id=\"${{ secrets.SUBNET_ID }}\" >> gcp.pkrvars.hcl
          echo disk_size=${{ secrets.DISK_SIZE }} >> gcp.pkrvars.hcl
          echo disk_type=\"${{ secrets.DISK_TYPE }}\" >> gcp.pkrvars.hcl
          echo instance_name=\"${{ secrets.INSTANCE_NAME }}\" >> gcp.pkrvars.hcl
          echo machine_type=\"${{ secrets.MACHINE_TYPE }}\" >> gcp.pkrvars.hcl
          echo image_name=\"${{ secrets.IMAGE_NAME }}\" >> gcp.pkrvars.hcl
          echo image_family_name=\"${{ secrets.IMAGE_FAMILY_NAME }}\" >> gcp.pkrvars.hcl
        working-directory: packer

      - name: Packer Init
        run: "packer init gcp.pkr.hcl"
        working-directory: packer

      - name: Packer Format
        run: "packer fmt ."
        working-directory: packer

      - name: Packer Validate
        run: "packer validate --var-file=gcp.pkrvars.hcl gcp.pkr.hcl"
        working-directory: packer

      - name: Packer Build
        run: "packer build --var-file=gcp.pkrvars.hcl gcp.pkr.hcl"
        working-directory: packer

      - name: Create GCE Instance Template
        id: instance_template_creation
        run: |
          # Create new instance template with 
          IMAGE_NAME=$(jq -r '.builds[0].artifact_id' packer-manifest.json)
          INSTANCE_TEMPLATE_NAME="dev-webapp-vm-template-${{ github.runner_number }}"
          
          gcloud compute instance-templates create $INSTANCE_TEMPLATE_NAME \
            --project="${{ secrets.GCP_PROJECT_ID }}" \
            --instance-template-region="${{ secrets.GCP_REGION }}" \
            --description="${{ secrets.INSTANCE_TEMPLATE_DESCRIPTION }}" \
            --machine-type="${{ secrets.INSTANCE_TEMPLATE_MACHINE_TYPE }}" \
            --tags="${{ secrets.INSTANCE_TEMPLATE_TAGS }}" \
            --image=$IMAGE_NAME \
            --boot-disk-size=${{ secrets.INSTANCE_TEMPLATE_DISK_SIZE }} \
            --boot-disk-type="${{ secrets.INSTANCE_TEMPLATE_DISK_TYPE }}" \
            --boot-disk-kms-project="${{ secrets.GCP_PROJECT_ID }}" \
            --boot-disk-kms-location="${{ secrets.GCP_REGION }}" \
            --boot-disk-kms-keyring="${{ secrets.INSTANCE_TEMPLATE_KMS_KEY_RING }}" \
            --boot-disk-kms-key="${{ secrets.INSTANCE_TEMPLATE_KMS_KEY }}" \
            --subnet="${{ secrets.INSTANCE_TEMPLATE_SUBNET }}" \
            --network-tier="${{ secrets.INSTANCE_TEMPLATE_NETWORK_TIER }}" \
            --region="${{ secrets.GCP_PROJECT_ID }}" \
            --service-account="${{ secrets.INSTANCE_TEMPLATE_SERVICE_ACCOUNT }}" \
            --scopes="${{ secrets.INSTANCE_TEMPLATE_SCOPES }}" \
            --metadata=startup-script='#!/bin/bash
          cat <<EOF > /home/csye6225/webapp.env
          SPRING_DATASOURCE_URL=${{ secrets.INSTANCE_TEMPLATE_METADATA_DB_HOST }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.INSTANCE_TEMPLATE_METADATA_DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.INSTANCE_TEMPLATE_METADATA_DB_PASSWORD }}
          LOGGING_LEVEL_ROOT=${{ secrets.INSTANCE_TEMPLATE_METADATA_LOGGING_LEVEL }}
          LOGGING_PATH=${{ secrets.INSTANCE_TEMPLATE_LOGGING_PATH }}
          GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          GCP_EMAIL_VERIFICATION_PUBSUB_TOPIC=${{ secrets.INSTANCE_TEMPLATE_METADATA_EMAIL_VERIFICATION_PUBSUB_TOPIC }}
          EOF'
          
          echo "::set-output name=INSTANCE_TEMPLATE_NAME::$INSTANCE_TEMPLATE_NAME"

      - name: Start Rolling Update
        run: |
          # Set the new template in MIG
          gcloud compute instance-groups managed set-instance-template dev-webapp-vm-mig \
            --template=${{ steps.instance_template_creation.outputs.INSTANCE_TEMPLATE_NAME }} \
            --region=${{ secrets.GCP_REGION }}
          
          # Start rolling update with new instance template
          gcloud compute instance-groups managed rolling-action start-update ${{ secrets.INSTANCE_GROUP_NAME }} \
            --version=template=${{ steps.instance_template_creation.outputs.INSTANCE_TEMPLATE_NAME }} \
            --region=${{ secrets.GCP_REGION }}

      - name: Check MIG Status
        run: |   
          # Wait for the instance group to reach desired state 
          gcloud compute instance-groups managed wait-until ${{ secrets.INSTANCE_GROUP_NAME }} \
            --version-target-reached \
            --region=${{ secrets.GCP_REGION }}
               

#          gcloud compute instance-templates create dev-webapp-vm-template-v1 \
#            --project="csye-6225-cloud-native" \
#            --instance-template-region="us-east1" \
#            --description="This template is used to create webapp server instances" \
#            --machine-type="e2-medium" \
#            --tags="deny-ssh,lb-webapp,deny-internet-access" \
#            --image="dev-webapp-v1-1712160720" \
#            --boot-disk-size=20 \
#            --boot-disk-type="pd-balanced" \
#            --boot-disk-kms-project="csye-6225-cloud-native" \
#            --boot-disk-kms-location="us-east1" \
#            --boot-disk-kms-keyring="dev-key-ring-0278cb35" \
#            --boot-disk-kms-key="instance-crypto-key" \
#            --subnet="webapp" \
#            --network-tier="PREMIUM" \
#            --region="us-east1" \
#            --service-account="dev-webapp-vm@csye-6225-cloud-native.iam.gserviceaccount.com" \
#            --scopes="cloud-platform,pubsub" \
#            --metadata=startup-script='#!/bin/bash
#          cat <<EOF > /home/csye6225/webapp.env
#          SPRING_DATASOURCE_URL=jdbc:postgresql://10.32.0.2:5432/webapp
#          SPRING_DATASOURCE_USERNAME=webapp
#          SPRING_DATASOURCE_PASSWORD=Jv3s72@<WF1HZows
#          LOGGING_LEVEL_ROOT=INFO
#          LOGGING_PATH=/var/log/webapp
#          GCP_PROJECT_ID=csye-6225-cloud-native
#          GCP_EMAIL_VERIFICATION_PUBSUB_TOPIC=verify_email
#          EOF'
#
#
#          gcloud compute instance-groups managed set-instance-template dev-webapp-vm-mig \
#            --template=dev-webapp-vm-template-v1 \
#            --region=us-east1
#
#          gcloud compute instance-groups managed rolling-action start-update dev-webapp-vm-mig \
#            --version=template=projects/csye-6225-cloud-native/regions/us-east1/instanceTemplates/dev-webapp-vm-template-v1 \
#            --region=us-east1
#
#           gcloud compute instance-groups managed wait-until dev-webapp-vm-mig \
#            --version-target-reached \
#            --region=us-east1

